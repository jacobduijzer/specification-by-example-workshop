// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by Reqnroll (https://www.reqnroll.net/).
//      Reqnroll Version:3.0.0.0
//      Reqnroll Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
using Reqnroll;
namespace SpecificationByExample.Specifications
{
    
    
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Reqnroll", "3.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class SimpleCalculatorFeature : object, global::Xunit.IClassFixture<SimpleCalculatorFeature.FixtureData>, global::Xunit.IAsyncLifetime
    {
        
        private global::Reqnroll.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private static global::Reqnroll.FeatureInfo featureInfo = new global::Reqnroll.FeatureInfo(new global::System.Globalization.CultureInfo("en-US"), "", "Simple Calculator", "In order to avoid silly mistakes\nAs a math idiot\nI want to be able to do simple c" +
                "alculations", global::Reqnroll.ProgrammingLanguage.CSharp, featureTags, InitializeCucumberMessages());
        
        private global::Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "Calculator.feature"
#line hidden
        
        public SimpleCalculatorFeature(SimpleCalculatorFeature.FixtureData fixtureData, global::Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
        }
        
        public static async global::System.Threading.Tasks.Task FeatureSetupAsync()
        {
        }
        
        public static async global::System.Threading.Tasks.Task FeatureTearDownAsync()
        {
            await global::Reqnroll.TestRunnerManager.ReleaseFeatureAsync(featureInfo);
        }
        
        public async global::System.Threading.Tasks.Task TestInitializeAsync()
        {
            testRunner = global::Reqnroll.TestRunnerManager.GetTestRunnerForAssembly(featureHint: featureInfo);
            try
            {
                if (((testRunner.FeatureContext != null) 
                            && (testRunner.FeatureContext.FeatureInfo.Equals(featureInfo) == false)))
                {
                    await testRunner.OnFeatureEndAsync();
                }
            }
            finally
            {
                if (((testRunner.FeatureContext != null) 
                            && testRunner.FeatureContext.BeforeFeatureHookFailed))
                {
                    throw new global::Reqnroll.ReqnrollException("Scenario skipped because of previous before feature hook error");
                }
                if ((testRunner.FeatureContext == null))
                {
                    await testRunner.OnFeatureStartAsync(featureInfo);
                }
            }
        }
        
        public async global::System.Threading.Tasks.Task TestTearDownAsync()
        {
            if ((testRunner == null))
            {
                return;
            }
            try
            {
                await testRunner.OnScenarioEndAsync();
            }
            finally
            {
                global::Reqnroll.TestRunnerManager.ReleaseTestRunner(testRunner);
                testRunner = null;
            }
        }
        
        public void ScenarioInitialize(global::Reqnroll.ScenarioInfo scenarioInfo, global::Reqnroll.RuleInfo ruleInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo, ruleInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<global::Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public async global::System.Threading.Tasks.Task ScenarioStartAsync()
        {
            await testRunner.OnScenarioStartAsync();
        }
        
        public async global::System.Threading.Tasks.Task ScenarioCleanupAsync()
        {
            await testRunner.CollectScenarioErrorsAsync();
        }
        
        private static global::Io.Cucumber.Messages.Types.Source SourceFunc()
        {
            return new global::Io.Cucumber.Messages.Types.Source("Calculator.feature", "Feature: Simple Calculator\nIn order to avoid silly mistakes\nAs a math idiot\nI wan" +
                    "t to be able to do simple calculations\n\n    @unit\n    Scenario: Add two numbers\n" +
                    "        Given I have entered 50 into the calculator\n        And I want to add 70" +
                    " to it\n        When I ask for the result\n        Then the result should be 120\n\n" +
                    "    @integration\n    Scenario: Adding two numbers via an API\n        Given I hav" +
                    "e a calculator API\n        When I send a request to add 50 and 70\n        Then t" +
                    "he response should be 120\n\n    @unit\n    Scenario Outline: Adding numbers\n      " +
                    "  Given I have entered <first> into the calculator\n        And I want to add <se" +
                    "cond> to it\n        When I ask for the result\n        Then the result should be " +
                    "<total>\n\n        Examples:\n          | first | second | total |\n          | 12  " +
                    "  | 5      | 17    |\n          | 20    | 5      | 25    |\n\n    @unit\n    Scenari" +
                    "o: Subtract two numbers\n        Given I have entered 50 into the calculator\n    " +
                    "    And I want to subtract 20 from it\n        When I ask for the result\n        " +
                    "Then the result should be 30\n\n    @unit\n    Scenario Outline: Subtracting number" +
                    "s\n        Given I have entered <first> into the calculator\n        And I want to" +
                    " subtract <second> from it\n        When I ask for the result\n        Then the re" +
                    "sult should be <total>\n\n        Examples:\n          | first | second | total |\n " +
                    "         | 12    | 5      | 7     |\n          | 20    | 5      | 25    |\n\n    @u" +
                    "i\n    Scenario Outline: Using the Web Calculator\n        Given I have opened the" +
                    " web calculator\n        When I enter <first> as the first number\n        And I e" +
                    "nter <second> as the second number\n        When I click the \'<operation>\' button" +
                    "\n        Then I can click the equals button\n        And the result should be <to" +
                    "tal> on the screen\n\n        Examples:\n          | first | second | operation | t" +
                    "otal |\n          | 12    | 5      | Add       | 17    |\n          | 20    | 5   " +
                    "   | Add       | 25    |\n          | 20    | 5      | Subtract  | 15    |\n      " +
                    "    | 20    | 5      | Multiply  | 100   |\n          | 20    | 5      | Divide  " +
                    "  | 4     |", global::Io.Cucumber.Messages.Types.SourceMediaType.TEXT_X_CUCUMBER_GHERKIN_PLAIN);
        }
        
        private static global::Io.Cucumber.Messages.Types.GherkinDocument GherkinDocumentFunc()
        {
            return new global::Io.Cucumber.Messages.Types.GherkinDocument("Calculator.feature", new global::Io.Cucumber.Messages.Types.Feature(new global::Io.Cucumber.Messages.Types.Location(1, new System.Nullable<long>(1)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "en-US", "Feature", "Simple Calculator", "In order to avoid silly mistakes\nAs a math idiot\nI want to be able to do simple c" +
                        "alculations", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.FeatureChild>(new global::Io.Cucumber.Messages.Types.FeatureChild[] {
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, null, new global::Io.Cucumber.Messages.Types.Scenario(new global::Io.Cucumber.Messages.Types.Location(7, new System.Nullable<long>(5)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[] {
                                                    new global::Io.Cucumber.Messages.Types.Tag(new global::Io.Cucumber.Messages.Types.Location(6, new System.Nullable<long>(5)), "@unit", "d9ed1b6db0a6235fae577e11393aa800")}), "Scenario", "Add two numbers", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(8, new System.Nullable<long>(9)), "Given ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONTEXT, "I have entered 50 into the calculator", null, null, "c9bb8e5e0a7ca358a26898d5c542f716"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(9, new System.Nullable<long>(9)), "And ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONJUNCTION, "I want to add 70 to it", null, null, "844a5fed6628d35da247117092bf42a4"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(10, new System.Nullable<long>(9)), "When ", global::Io.Cucumber.Messages.Types.StepKeywordType.ACTION, "I ask for the result", null, null, "59a31f07056a755da55490ef49bfc64e"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(11, new System.Nullable<long>(9)), "Then ", global::Io.Cucumber.Messages.Types.StepKeywordType.OUTCOME, "the result should be 120", null, null, "759f1986b6185e5bbb1949df7e1a7927")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Examples>(new global::Io.Cucumber.Messages.Types.Examples[0]), "ae7426ca16d50853b7d00ec2f334f8a0")),
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, null, new global::Io.Cucumber.Messages.Types.Scenario(new global::Io.Cucumber.Messages.Types.Location(14, new System.Nullable<long>(5)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[] {
                                                    new global::Io.Cucumber.Messages.Types.Tag(new global::Io.Cucumber.Messages.Types.Location(13, new System.Nullable<long>(5)), "@integration", "778ddee1b0b32551bb3fa883f229c1a0")}), "Scenario", "Adding two numbers via an API", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(15, new System.Nullable<long>(9)), "Given ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONTEXT, "I have a calculator API", null, null, "1326345496f0f9568aea8ab52e59d4b6"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(16, new System.Nullable<long>(9)), "When ", global::Io.Cucumber.Messages.Types.StepKeywordType.ACTION, "I send a request to add 50 and 70", null, null, "18071a968cdcc85f93cbb326a54249de"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(17, new System.Nullable<long>(9)), "Then ", global::Io.Cucumber.Messages.Types.StepKeywordType.OUTCOME, "the response should be 120", null, null, "27cfc83130c64e539916bf636799954a")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Examples>(new global::Io.Cucumber.Messages.Types.Examples[0]), "254ee363e7714c518afafe7f64b9bb8b")),
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, null, new global::Io.Cucumber.Messages.Types.Scenario(new global::Io.Cucumber.Messages.Types.Location(20, new System.Nullable<long>(5)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[] {
                                                    new global::Io.Cucumber.Messages.Types.Tag(new global::Io.Cucumber.Messages.Types.Location(19, new System.Nullable<long>(5)), "@unit", "1fc328adc47da558a646f58ef4c2c64b")}), "Scenario Outline", "Adding numbers", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(21, new System.Nullable<long>(9)), "Given ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONTEXT, "I have entered <first> into the calculator", null, null, "39e935de0143d95da5e94fd52d35420b"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(22, new System.Nullable<long>(9)), "And ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONJUNCTION, "I want to add <second> to it", null, null, "d90726a878ed535091048d214324f859"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(23, new System.Nullable<long>(9)), "When ", global::Io.Cucumber.Messages.Types.StepKeywordType.ACTION, "I ask for the result", null, null, "0c320aaa787fba528c58b0172cf96dc1"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(24, new System.Nullable<long>(9)), "Then ", global::Io.Cucumber.Messages.Types.StepKeywordType.OUTCOME, "the result should be <total>", null, null, "b1806fb9a768605eb5d4b19e2d00b093")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Examples>(new global::Io.Cucumber.Messages.Types.Examples[] {
                                                    new global::Io.Cucumber.Messages.Types.Examples(new global::Io.Cucumber.Messages.Types.Location(26, new System.Nullable<long>(9)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "Examples", "", "", new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(27, new System.Nullable<long>(11)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(27, new System.Nullable<long>(13)), "first"),
                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(27, new System.Nullable<long>(21)), "second"),
                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(27, new System.Nullable<long>(30)), "total")}), "3d86117216b3d95cafe3796665370599"), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableRow>(new global::Io.Cucumber.Messages.Types.TableRow[] {
                                                                    new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(28, new System.Nullable<long>(11)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(28, new System.Nullable<long>(13)), "12"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(28, new System.Nullable<long>(21)), "5"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(28, new System.Nullable<long>(30)), "17")}), "1251244fb584005db62e59701c4d799f"),
                                                                    new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(29, new System.Nullable<long>(11)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(29, new System.Nullable<long>(13)), "20"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(29, new System.Nullable<long>(21)), "5"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(29, new System.Nullable<long>(30)), "25")}), "e7150a61c712a65a9863e6b89660d09f")}), "f0903cdbd87a1b5383a55d04c62f4bfc")}), "fe16e6bc9dda0f5f96cc98b61aa41886")),
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, null, new global::Io.Cucumber.Messages.Types.Scenario(new global::Io.Cucumber.Messages.Types.Location(32, new System.Nullable<long>(5)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[] {
                                                    new global::Io.Cucumber.Messages.Types.Tag(new global::Io.Cucumber.Messages.Types.Location(31, new System.Nullable<long>(5)), "@unit", "bffc014a44dff952896cf8adc35315f0")}), "Scenario", "Subtract two numbers", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(33, new System.Nullable<long>(9)), "Given ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONTEXT, "I have entered 50 into the calculator", null, null, "53bfe5b9a4c6715ba7f5325b1cea161b"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(34, new System.Nullable<long>(9)), "And ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONJUNCTION, "I want to subtract 20 from it", null, null, "0c452d7a8510925b9d3b00296fe81fdb"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(35, new System.Nullable<long>(9)), "When ", global::Io.Cucumber.Messages.Types.StepKeywordType.ACTION, "I ask for the result", null, null, "06948c247c2f75588f1677b5425abe08"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(36, new System.Nullable<long>(9)), "Then ", global::Io.Cucumber.Messages.Types.StepKeywordType.OUTCOME, "the result should be 30", null, null, "e19508233b61215f9c791d5abe4ca2d6")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Examples>(new global::Io.Cucumber.Messages.Types.Examples[0]), "d9bd77b7376f9254808f6fb204f3b51c")),
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, null, new global::Io.Cucumber.Messages.Types.Scenario(new global::Io.Cucumber.Messages.Types.Location(39, new System.Nullable<long>(5)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[] {
                                                    new global::Io.Cucumber.Messages.Types.Tag(new global::Io.Cucumber.Messages.Types.Location(38, new System.Nullable<long>(5)), "@unit", "c1607e5c7a0e2c5395acfc3934fa65f9")}), "Scenario Outline", "Subtracting numbers", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(40, new System.Nullable<long>(9)), "Given ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONTEXT, "I have entered <first> into the calculator", null, null, "44b9e7229efa1d53b02b27ff9b9c56e9"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(41, new System.Nullable<long>(9)), "And ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONJUNCTION, "I want to subtract <second> from it", null, null, "d25b0a4ea1b5725d80d1d735fbe11713"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(42, new System.Nullable<long>(9)), "When ", global::Io.Cucumber.Messages.Types.StepKeywordType.ACTION, "I ask for the result", null, null, "4ae770a030371d56a9d7e10fd5cb3651"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(43, new System.Nullable<long>(9)), "Then ", global::Io.Cucumber.Messages.Types.StepKeywordType.OUTCOME, "the result should be <total>", null, null, "51b4754e6e954e599f1504784b650ce7")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Examples>(new global::Io.Cucumber.Messages.Types.Examples[] {
                                                    new global::Io.Cucumber.Messages.Types.Examples(new global::Io.Cucumber.Messages.Types.Location(45, new System.Nullable<long>(9)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "Examples", "", "", new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(46, new System.Nullable<long>(11)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(46, new System.Nullable<long>(13)), "first"),
                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(46, new System.Nullable<long>(21)), "second"),
                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(46, new System.Nullable<long>(30)), "total")}), "fd31525b93fc5556bfbe4ae84bd7d813"), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableRow>(new global::Io.Cucumber.Messages.Types.TableRow[] {
                                                                    new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(47, new System.Nullable<long>(11)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(47, new System.Nullable<long>(13)), "12"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(47, new System.Nullable<long>(21)), "5"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(47, new System.Nullable<long>(30)), "7")}), "ae7af526bdc593538bc6276f3836b311"),
                                                                    new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(48, new System.Nullable<long>(11)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(48, new System.Nullable<long>(13)), "20"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(48, new System.Nullable<long>(21)), "5"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(48, new System.Nullable<long>(30)), "25")}), "a527532a88a4bd5dba5db30c96a57a55")}), "5620723e277fe852b5a5c0d925ef2984")}), "3bfa4d2b83db8a5384a01e5c24016758")),
                                new global::Io.Cucumber.Messages.Types.FeatureChild(null, null, new global::Io.Cucumber.Messages.Types.Scenario(new global::Io.Cucumber.Messages.Types.Location(51, new System.Nullable<long>(5)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[] {
                                                    new global::Io.Cucumber.Messages.Types.Tag(new global::Io.Cucumber.Messages.Types.Location(50, new System.Nullable<long>(5)), "@ui", "81a9a4042df81b52adc7985d24c0aa53")}), "Scenario Outline", "Using the Web Calculator", "", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Step>(new global::Io.Cucumber.Messages.Types.Step[] {
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(52, new System.Nullable<long>(9)), "Given ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONTEXT, "I have opened the web calculator", null, null, "a4697a6efc923250b050d2ca17e8715b"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(53, new System.Nullable<long>(9)), "When ", global::Io.Cucumber.Messages.Types.StepKeywordType.ACTION, "I enter <first> as the first number", null, null, "998241018bd96a52ac59e938e556e441"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(54, new System.Nullable<long>(9)), "And ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONJUNCTION, "I enter <second> as the second number", null, null, "d82fcfe9f40d8b5a8cb195809483d433"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(55, new System.Nullable<long>(9)), "When ", global::Io.Cucumber.Messages.Types.StepKeywordType.ACTION, "I click the \'<operation>\' button", null, null, "74d43b4f5a546d5d987228fe3a3db616"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(56, new System.Nullable<long>(9)), "Then ", global::Io.Cucumber.Messages.Types.StepKeywordType.OUTCOME, "I can click the equals button", null, null, "5d5e888910419e5fac7e857372e2784c"),
                                                    new global::Io.Cucumber.Messages.Types.Step(new global::Io.Cucumber.Messages.Types.Location(57, new System.Nullable<long>(9)), "And ", global::Io.Cucumber.Messages.Types.StepKeywordType.CONJUNCTION, "the result should be <total> on the screen", null, null, "3e7ddc26ecf5575c968aec7082e4967b")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Examples>(new global::Io.Cucumber.Messages.Types.Examples[] {
                                                    new global::Io.Cucumber.Messages.Types.Examples(new global::Io.Cucumber.Messages.Types.Location(59, new System.Nullable<long>(9)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Tag>(new global::Io.Cucumber.Messages.Types.Tag[0]), "Examples", "", "", new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(60, new System.Nullable<long>(11)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(60, new System.Nullable<long>(13)), "first"),
                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(60, new System.Nullable<long>(21)), "second"),
                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(60, new System.Nullable<long>(30)), "operation"),
                                                                        new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(60, new System.Nullable<long>(42)), "total")}), "ab7db1b95d332d5bb67e348c76d301ab"), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableRow>(new global::Io.Cucumber.Messages.Types.TableRow[] {
                                                                    new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(61, new System.Nullable<long>(11)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(61, new System.Nullable<long>(13)), "12"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(61, new System.Nullable<long>(21)), "5"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(61, new System.Nullable<long>(30)), "Add"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(61, new System.Nullable<long>(42)), "17")}), "412ea97ecce6f1529725b8347fdf9b27"),
                                                                    new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(62, new System.Nullable<long>(11)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(62, new System.Nullable<long>(13)), "20"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(62, new System.Nullable<long>(21)), "5"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(62, new System.Nullable<long>(30)), "Add"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(62, new System.Nullable<long>(42)), "25")}), "817e1bd02488d25a881f630bd667d85a"),
                                                                    new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(63, new System.Nullable<long>(11)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(63, new System.Nullable<long>(13)), "20"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(63, new System.Nullable<long>(21)), "5"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(63, new System.Nullable<long>(30)), "Subtract"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(63, new System.Nullable<long>(42)), "15")}), "9e5e1b9bc3b00c51ad4080f02c371bec"),
                                                                    new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(64, new System.Nullable<long>(11)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(64, new System.Nullable<long>(13)), "20"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(64, new System.Nullable<long>(21)), "5"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(64, new System.Nullable<long>(30)), "Multiply"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(64, new System.Nullable<long>(42)), "100")}), "25ef856fc2cb0f56a278c844f9e78ed1"),
                                                                    new global::Io.Cucumber.Messages.Types.TableRow(new global::Io.Cucumber.Messages.Types.Location(65, new System.Nullable<long>(11)), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.TableCell>(new global::Io.Cucumber.Messages.Types.TableCell[] {
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(65, new System.Nullable<long>(13)), "20"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(65, new System.Nullable<long>(21)), "5"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(65, new System.Nullable<long>(30)), "Divide"),
                                                                                    new global::Io.Cucumber.Messages.Types.TableCell(new global::Io.Cucumber.Messages.Types.Location(65, new System.Nullable<long>(42)), "4")}), "b97f9d2e8995905abab1967c60a94296")}), "b101f78c21cda05b9f5c1de14ba95bf8")}), "0045eabf93a5d45cb7751b9a200bbebe"))})), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Comment>(new global::Io.Cucumber.Messages.Types.Comment[0]));
        }
        
        private static global::System.Collections.Generic.IEnumerable<Io.Cucumber.Messages.Types.Pickle> PicklesFunc()
        {
            return new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.Pickle>(new global::Io.Cucumber.Messages.Types.Pickle[] {
                        new global::Io.Cucumber.Messages.Types.Pickle("fe86a21a37faaa5ab6c63bd5a96bef6b", "Calculator.feature", "Add two numbers", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "c9bb8e5e0a7ca358a26898d5c542f716"}), "65a9f9dd83a32858a501a5582371e3e1", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have entered 50 into the calculator"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "844a5fed6628d35da247117092bf42a4"}), "d101c8b48b50a95fbce688473913331f", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I want to add 70 to it"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "59a31f07056a755da55490ef49bfc64e"}), "cd4ce0fc7f0e5d5f8315a9f475608c2e", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I ask for the result"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "759f1986b6185e5bbb1949df7e1a7927"}), "dfdca530e1f8c55e887074c75ccb3a76", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the result should be 120")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@unit", "d9ed1b6db0a6235fae577e11393aa800")}), new System.Collections.Generic.List<string>(new string[] {
                                        "ae7426ca16d50853b7d00ec2f334f8a0"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("b854c4b5f8801955819df4a962e616e6", "Calculator.feature", "Adding two numbers via an API", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "1326345496f0f9568aea8ab52e59d4b6"}), "3a154c96747bf85fb124a3ab11270d9b", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have a calculator API"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "18071a968cdcc85f93cbb326a54249de"}), "e2b7dd285b993855bdc44bed0504b836", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I send a request to add 50 and 70"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "27cfc83130c64e539916bf636799954a"}), "c0768b10df0efb558bfcd9554950c3ee", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the response should be 120")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@integration", "778ddee1b0b32551bb3fa883f229c1a0")}), new System.Collections.Generic.List<string>(new string[] {
                                        "254ee363e7714c518afafe7f64b9bb8b"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("5231415d2d1b695cb819f17a27305abd", "Calculator.feature", "Adding numbers", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "39e935de0143d95da5e94fd52d35420b",
                                                        "1251244fb584005db62e59701c4d799f"}), "eb83e18af4b020528c5fef37086c7d1f", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have entered 12 into the calculator"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "d90726a878ed535091048d214324f859",
                                                        "1251244fb584005db62e59701c4d799f"}), "97b9744d56581d568fb9a79fe946d3f4", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I want to add 5 to it"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "0c320aaa787fba528c58b0172cf96dc1",
                                                        "1251244fb584005db62e59701c4d799f"}), "fc195aa3376a74518223c51d75e33142", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I ask for the result"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "b1806fb9a768605eb5d4b19e2d00b093",
                                                        "1251244fb584005db62e59701c4d799f"}), "b4bce5af51be5e53bf48432501c2cf97", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the result should be 17")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@unit", "1fc328adc47da558a646f58ef4c2c64b")}), new System.Collections.Generic.List<string>(new string[] {
                                        "fe16e6bc9dda0f5f96cc98b61aa41886",
                                        "1251244fb584005db62e59701c4d799f"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("45ea5bd2b1c4f85aa3ad5d1f694848c3", "Calculator.feature", "Adding numbers", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "39e935de0143d95da5e94fd52d35420b",
                                                        "e7150a61c712a65a9863e6b89660d09f"}), "3d49ba3bcaa71f5ebcf7fcd86171bd67", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have entered 20 into the calculator"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "d90726a878ed535091048d214324f859",
                                                        "e7150a61c712a65a9863e6b89660d09f"}), "5c18721d804f7256bf9e7dde9f5ed0ea", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I want to add 5 to it"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "0c320aaa787fba528c58b0172cf96dc1",
                                                        "e7150a61c712a65a9863e6b89660d09f"}), "db22b2e67609005c8238d0e10d1021ff", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I ask for the result"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "b1806fb9a768605eb5d4b19e2d00b093",
                                                        "e7150a61c712a65a9863e6b89660d09f"}), "aa9cb6280498885e8ef309688299ff57", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the result should be 25")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@unit", "1fc328adc47da558a646f58ef4c2c64b")}), new System.Collections.Generic.List<string>(new string[] {
                                        "fe16e6bc9dda0f5f96cc98b61aa41886",
                                        "e7150a61c712a65a9863e6b89660d09f"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("719eb9756eb0de5d9dc3a47836dc2027", "Calculator.feature", "Subtract two numbers", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "53bfe5b9a4c6715ba7f5325b1cea161b"}), "8105f22953124851bba6cea2e90b45b7", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have entered 50 into the calculator"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "0c452d7a8510925b9d3b00296fe81fdb"}), "008b9805586c0a51ab6f41746e9146fb", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I want to subtract 20 from it"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "06948c247c2f75588f1677b5425abe08"}), "a0f95a84703b88588b40ea18741aa615", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I ask for the result"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "e19508233b61215f9c791d5abe4ca2d6"}), "062ed7316c32aa5fb04bba24c44cc99e", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the result should be 30")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@unit", "bffc014a44dff952896cf8adc35315f0")}), new System.Collections.Generic.List<string>(new string[] {
                                        "d9bd77b7376f9254808f6fb204f3b51c"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("ccd7f57d7b0d835ca7a1ad0d68f45fb2", "Calculator.feature", "Subtracting numbers", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "44b9e7229efa1d53b02b27ff9b9c56e9",
                                                        "ae7af526bdc593538bc6276f3836b311"}), "b9f42c579bebb75f88566ea2fcfbe8e5", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have entered 12 into the calculator"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "d25b0a4ea1b5725d80d1d735fbe11713",
                                                        "ae7af526bdc593538bc6276f3836b311"}), "a93124291855735494253ddfdaea1f9d", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I want to subtract 5 from it"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "4ae770a030371d56a9d7e10fd5cb3651",
                                                        "ae7af526bdc593538bc6276f3836b311"}), "e14c53c60b79215da7b2ce3a05f7e693", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I ask for the result"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "51b4754e6e954e599f1504784b650ce7",
                                                        "ae7af526bdc593538bc6276f3836b311"}), "287a28124ae14f5598e2dccf7a03f4ba", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the result should be 7")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@unit", "c1607e5c7a0e2c5395acfc3934fa65f9")}), new System.Collections.Generic.List<string>(new string[] {
                                        "3bfa4d2b83db8a5384a01e5c24016758",
                                        "ae7af526bdc593538bc6276f3836b311"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("cd1ed10897b31d5980e05d7f597fe30f", "Calculator.feature", "Subtracting numbers", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "44b9e7229efa1d53b02b27ff9b9c56e9",
                                                        "a527532a88a4bd5dba5db30c96a57a55"}), "cc782db07f56c8538685dcad7475b307", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have entered 20 into the calculator"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "d25b0a4ea1b5725d80d1d735fbe11713",
                                                        "a527532a88a4bd5dba5db30c96a57a55"}), "02fa3fd63fda915f8ec78e4d4b6bfb7d", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I want to subtract 5 from it"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "4ae770a030371d56a9d7e10fd5cb3651",
                                                        "a527532a88a4bd5dba5db30c96a57a55"}), "2d61d66041f0e35e9f3c328ec2b4cb85", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I ask for the result"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "51b4754e6e954e599f1504784b650ce7",
                                                        "a527532a88a4bd5dba5db30c96a57a55"}), "1690927e57aba951b3d666d2f4d53849", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the result should be 25")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@unit", "c1607e5c7a0e2c5395acfc3934fa65f9")}), new System.Collections.Generic.List<string>(new string[] {
                                        "3bfa4d2b83db8a5384a01e5c24016758",
                                        "a527532a88a4bd5dba5db30c96a57a55"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("ebe9b8c89bb17550ac96be857462fd93", "Calculator.feature", "Using the Web Calculator", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "a4697a6efc923250b050d2ca17e8715b",
                                                        "412ea97ecce6f1529725b8347fdf9b27"}), "132fb8e3bc6de255b23b06490abe3a0c", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have opened the web calculator"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "998241018bd96a52ac59e938e556e441",
                                                        "412ea97ecce6f1529725b8347fdf9b27"}), "f690f7f954920952a3b1038b558e17a9", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I enter 12 as the first number"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "d82fcfe9f40d8b5a8cb195809483d433",
                                                        "412ea97ecce6f1529725b8347fdf9b27"}), "31cdec12cdc613568c788596181332ea", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I enter 5 as the second number"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "74d43b4f5a546d5d987228fe3a3db616",
                                                        "412ea97ecce6f1529725b8347fdf9b27"}), "ba61f22eb1ff4955903eade86e06c75f", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I click the \'Add\' button"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "5d5e888910419e5fac7e857372e2784c",
                                                        "412ea97ecce6f1529725b8347fdf9b27"}), "8e4b985d053f065eb83b3c4fdbd92005", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "I can click the equals button"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "3e7ddc26ecf5575c968aec7082e4967b",
                                                        "412ea97ecce6f1529725b8347fdf9b27"}), "77e1fc043671d75db25107caa6949100", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the result should be 17 on the screen")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@ui", "81a9a4042df81b52adc7985d24c0aa53")}), new System.Collections.Generic.List<string>(new string[] {
                                        "0045eabf93a5d45cb7751b9a200bbebe",
                                        "412ea97ecce6f1529725b8347fdf9b27"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("021dd51ae4246d59ac48fcbf780172a7", "Calculator.feature", "Using the Web Calculator", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "a4697a6efc923250b050d2ca17e8715b",
                                                        "817e1bd02488d25a881f630bd667d85a"}), "39c500fb4f9a735e98a9e33c7332ab38", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have opened the web calculator"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "998241018bd96a52ac59e938e556e441",
                                                        "817e1bd02488d25a881f630bd667d85a"}), "3c01c449e55b865a8379a62dfd7a6562", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I enter 20 as the first number"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "d82fcfe9f40d8b5a8cb195809483d433",
                                                        "817e1bd02488d25a881f630bd667d85a"}), "64465c63d66a925d8f3685920d6082dd", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I enter 5 as the second number"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "74d43b4f5a546d5d987228fe3a3db616",
                                                        "817e1bd02488d25a881f630bd667d85a"}), "a475b095cd3d5352adf14e46df2f00c2", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I click the \'Add\' button"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "5d5e888910419e5fac7e857372e2784c",
                                                        "817e1bd02488d25a881f630bd667d85a"}), "8d076f7989bba05c83551dbc67da80c3", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "I can click the equals button"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "3e7ddc26ecf5575c968aec7082e4967b",
                                                        "817e1bd02488d25a881f630bd667d85a"}), "6b82cbf2e86d38548754f2bc1dec929f", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the result should be 25 on the screen")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@ui", "81a9a4042df81b52adc7985d24c0aa53")}), new System.Collections.Generic.List<string>(new string[] {
                                        "0045eabf93a5d45cb7751b9a200bbebe",
                                        "817e1bd02488d25a881f630bd667d85a"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("e124d2050db6c35f9b5a62304bf0898d", "Calculator.feature", "Using the Web Calculator", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "a4697a6efc923250b050d2ca17e8715b",
                                                        "9e5e1b9bc3b00c51ad4080f02c371bec"}), "1626c131107c2d5b8ae86295975db9ad", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have opened the web calculator"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "998241018bd96a52ac59e938e556e441",
                                                        "9e5e1b9bc3b00c51ad4080f02c371bec"}), "9c84eedfc4106e50b0a3e92d7d09c9aa", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I enter 20 as the first number"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "d82fcfe9f40d8b5a8cb195809483d433",
                                                        "9e5e1b9bc3b00c51ad4080f02c371bec"}), "c38b615e172ccb538b5f1ccc7b296f8d", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I enter 5 as the second number"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "74d43b4f5a546d5d987228fe3a3db616",
                                                        "9e5e1b9bc3b00c51ad4080f02c371bec"}), "4faa4d1b854c7c52b5dc69a72442db8f", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I click the \'Subtract\' button"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "5d5e888910419e5fac7e857372e2784c",
                                                        "9e5e1b9bc3b00c51ad4080f02c371bec"}), "e9d224a5bf76b652a0360bae2e9ff501", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "I can click the equals button"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "3e7ddc26ecf5575c968aec7082e4967b",
                                                        "9e5e1b9bc3b00c51ad4080f02c371bec"}), "6bc3dd18c9f2dc5cab29578b65771629", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the result should be 15 on the screen")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@ui", "81a9a4042df81b52adc7985d24c0aa53")}), new System.Collections.Generic.List<string>(new string[] {
                                        "0045eabf93a5d45cb7751b9a200bbebe",
                                        "9e5e1b9bc3b00c51ad4080f02c371bec"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("bf7f89462cdc565296fdad15ceb42e88", "Calculator.feature", "Using the Web Calculator", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "a4697a6efc923250b050d2ca17e8715b",
                                                        "25ef856fc2cb0f56a278c844f9e78ed1"}), "ca83971f7166015ca296e069766383e1", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have opened the web calculator"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "998241018bd96a52ac59e938e556e441",
                                                        "25ef856fc2cb0f56a278c844f9e78ed1"}), "84bbc7d89006b45aa2711a2e4bc80cc7", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I enter 20 as the first number"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "d82fcfe9f40d8b5a8cb195809483d433",
                                                        "25ef856fc2cb0f56a278c844f9e78ed1"}), "3810669575a4d05aadb03d78454131d6", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I enter 5 as the second number"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "74d43b4f5a546d5d987228fe3a3db616",
                                                        "25ef856fc2cb0f56a278c844f9e78ed1"}), "6646f117494539559ed6a132655e03b0", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I click the \'Multiply\' button"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "5d5e888910419e5fac7e857372e2784c",
                                                        "25ef856fc2cb0f56a278c844f9e78ed1"}), "c5fb656a18c71c5998b9a134f48536c8", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "I can click the equals button"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "3e7ddc26ecf5575c968aec7082e4967b",
                                                        "25ef856fc2cb0f56a278c844f9e78ed1"}), "bb562f896b8a7a5fb9b72bc1ff096158", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the result should be 100 on the screen")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@ui", "81a9a4042df81b52adc7985d24c0aa53")}), new System.Collections.Generic.List<string>(new string[] {
                                        "0045eabf93a5d45cb7751b9a200bbebe",
                                        "25ef856fc2cb0f56a278c844f9e78ed1"})),
                        new global::Io.Cucumber.Messages.Types.Pickle("c6b5dcc13308ab50baef033d77de1326", "Calculator.feature", "Using the Web Calculator", "en-US", new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleStep>(new global::Io.Cucumber.Messages.Types.PickleStep[] {
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "a4697a6efc923250b050d2ca17e8715b",
                                                        "b97f9d2e8995905abab1967c60a94296"}), "918541a6a3da785994acd4b81c2e9124", global::Io.Cucumber.Messages.Types.PickleStepType.CONTEXT, "I have opened the web calculator"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "998241018bd96a52ac59e938e556e441",
                                                        "b97f9d2e8995905abab1967c60a94296"}), "873e691009d67b559cdaab02fcedb39a", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I enter 20 as the first number"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "d82fcfe9f40d8b5a8cb195809483d433",
                                                        "b97f9d2e8995905abab1967c60a94296"}), "673a548b99bd6352bd95ef59580f99df", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I enter 5 as the second number"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "74d43b4f5a546d5d987228fe3a3db616",
                                                        "b97f9d2e8995905abab1967c60a94296"}), "0ecab16c22a68b5bac8c25b934d7b474", global::Io.Cucumber.Messages.Types.PickleStepType.ACTION, "I click the \'Divide\' button"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "5d5e888910419e5fac7e857372e2784c",
                                                        "b97f9d2e8995905abab1967c60a94296"}), "1012080a02b4455995f4734e09b18588", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "I can click the equals button"),
                                        new global::Io.Cucumber.Messages.Types.PickleStep(null, new System.Collections.Generic.List<string>(new string[] {
                                                        "3e7ddc26ecf5575c968aec7082e4967b",
                                                        "b97f9d2e8995905abab1967c60a94296"}), "1c79279746fd0f53829b9089f5e247ec", global::Io.Cucumber.Messages.Types.PickleStepType.OUTCOME, "the result should be 4 on the screen")}), new System.Collections.Generic.List<global::Io.Cucumber.Messages.Types.PickleTag>(new global::Io.Cucumber.Messages.Types.PickleTag[] {
                                        new global::Io.Cucumber.Messages.Types.PickleTag("@ui", "81a9a4042df81b52adc7985d24c0aa53")}), new System.Collections.Generic.List<string>(new string[] {
                                        "0045eabf93a5d45cb7751b9a200bbebe",
                                        "b97f9d2e8995905abab1967c60a94296"}))});
        }
        
        private static global::Reqnroll.Formatters.RuntimeSupport.FeatureLevelCucumberMessages InitializeCucumberMessages()
        {
            return new global::Reqnroll.Formatters.RuntimeSupport.FeatureLevelCucumberMessages(new global::System.Func<Io.Cucumber.Messages.Types.Source>(SimpleCalculatorFeature.SourceFunc), new global::System.Func<Io.Cucumber.Messages.Types.GherkinDocument>(SimpleCalculatorFeature.GherkinDocumentFunc), new global::System.Func<System.Collections.Generic.IEnumerable<Io.Cucumber.Messages.Types.Pickle>>(SimpleCalculatorFeature.PicklesFunc));
        }
        
        async global::System.Threading.Tasks.Task global::Xunit.IAsyncLifetime.InitializeAsync()
        {
            try
            {
                await this.TestInitializeAsync();
            }
            catch (System.Exception e1)
            {
                try
                {
                    ((global::Xunit.IAsyncLifetime)(this)).DisposeAsync();
                }
                catch (System.Exception e2)
                {
                    throw new System.AggregateException("Test initialization failed", e1, e2);
                }
                throw;
            }
        }
        
        async global::System.Threading.Tasks.Task global::Xunit.IAsyncLifetime.DisposeAsync()
        {
            await this.TestTearDownAsync();
        }
        
        [global::Xunit.SkippableFactAttribute(DisplayName="Add two numbers")]
        [global::Xunit.TraitAttribute("FeatureTitle", "Simple Calculator")]
        [global::Xunit.TraitAttribute("Description", "Add two numbers")]
        [global::Xunit.TraitAttribute("Category", "unit")]
        public async global::System.Threading.Tasks.Task AddTwoNumbers()
        {
            string[] tagsOfScenario = new string[] {
                    "unit"};
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            string pickleIndex = "0";
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Add two numbers", null, tagsOfScenario, argumentsOfScenario, featureTags, pickleIndex);
            string[] tagsOfRule = ((string[])(null));
            global::Reqnroll.RuleInfo ruleInfo = null;
#line 7
    this.ScenarioInitialize(scenarioInfo, ruleInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                await testRunner.SkipScenarioAsync();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 8
        await testRunner.GivenAsync("I have entered 50 into the calculator", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 9
        await testRunner.AndAsync("I want to add 70 to it", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 10
        await testRunner.WhenAsync("I ask for the result", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 11
        await testRunner.ThenAsync("the result should be 120", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [global::Xunit.SkippableFactAttribute(DisplayName="Adding two numbers via an API")]
        [global::Xunit.TraitAttribute("FeatureTitle", "Simple Calculator")]
        [global::Xunit.TraitAttribute("Description", "Adding two numbers via an API")]
        [global::Xunit.TraitAttribute("Category", "integration")]
        public async global::System.Threading.Tasks.Task AddingTwoNumbersViaAnAPI()
        {
            string[] tagsOfScenario = new string[] {
                    "integration"};
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            string pickleIndex = "1";
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Adding two numbers via an API", null, tagsOfScenario, argumentsOfScenario, featureTags, pickleIndex);
            string[] tagsOfRule = ((string[])(null));
            global::Reqnroll.RuleInfo ruleInfo = null;
#line 14
    this.ScenarioInitialize(scenarioInfo, ruleInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                await testRunner.SkipScenarioAsync();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 15
        await testRunner.GivenAsync("I have a calculator API", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 16
        await testRunner.WhenAsync("I send a request to add 50 and 70", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 17
        await testRunner.ThenAsync("the response should be 120", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [global::Xunit.SkippableTheoryAttribute(DisplayName="Adding numbers")]
        [global::Xunit.TraitAttribute("FeatureTitle", "Simple Calculator")]
        [global::Xunit.TraitAttribute("Description", "Adding numbers")]
        [global::Xunit.TraitAttribute("Category", "unit")]
        [global::Xunit.InlineDataAttribute("12", "5", "17", "2", new string[0])]
        [global::Xunit.InlineDataAttribute("20", "5", "25", "3", new string[0])]
        public async global::System.Threading.Tasks.Task AddingNumbers(string first, string second, string total, string @__pickleIndex, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "unit"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("first", first);
            argumentsOfScenario.Add("second", second);
            argumentsOfScenario.Add("total", total);
            string pickleIndex = @__pickleIndex;
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Adding numbers", null, tagsOfScenario, argumentsOfScenario, featureTags, pickleIndex);
            string[] tagsOfRule = ((string[])(null));
            global::Reqnroll.RuleInfo ruleInfo = null;
#line 20
    this.ScenarioInitialize(scenarioInfo, ruleInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                await testRunner.SkipScenarioAsync();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 21
        await testRunner.GivenAsync(string.Format("I have entered {0} into the calculator", first), ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 22
        await testRunner.AndAsync(string.Format("I want to add {0} to it", second), ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 23
        await testRunner.WhenAsync("I ask for the result", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 24
        await testRunner.ThenAsync(string.Format("the result should be {0}", total), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [global::Xunit.SkippableFactAttribute(DisplayName="Subtract two numbers")]
        [global::Xunit.TraitAttribute("FeatureTitle", "Simple Calculator")]
        [global::Xunit.TraitAttribute("Description", "Subtract two numbers")]
        [global::Xunit.TraitAttribute("Category", "unit")]
        public async global::System.Threading.Tasks.Task SubtractTwoNumbers()
        {
            string[] tagsOfScenario = new string[] {
                    "unit"};
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            string pickleIndex = "4";
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Subtract two numbers", null, tagsOfScenario, argumentsOfScenario, featureTags, pickleIndex);
            string[] tagsOfRule = ((string[])(null));
            global::Reqnroll.RuleInfo ruleInfo = null;
#line 32
    this.ScenarioInitialize(scenarioInfo, ruleInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                await testRunner.SkipScenarioAsync();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 33
        await testRunner.GivenAsync("I have entered 50 into the calculator", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 34
        await testRunner.AndAsync("I want to subtract 20 from it", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 35
        await testRunner.WhenAsync("I ask for the result", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 36
        await testRunner.ThenAsync("the result should be 30", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [global::Xunit.SkippableTheoryAttribute(DisplayName="Subtracting numbers")]
        [global::Xunit.TraitAttribute("FeatureTitle", "Simple Calculator")]
        [global::Xunit.TraitAttribute("Description", "Subtracting numbers")]
        [global::Xunit.TraitAttribute("Category", "unit")]
        [global::Xunit.InlineDataAttribute("12", "5", "7", "5", new string[0])]
        [global::Xunit.InlineDataAttribute("20", "5", "25", "6", new string[0])]
        public async global::System.Threading.Tasks.Task SubtractingNumbers(string first, string second, string total, string @__pickleIndex, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "unit"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("first", first);
            argumentsOfScenario.Add("second", second);
            argumentsOfScenario.Add("total", total);
            string pickleIndex = @__pickleIndex;
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Subtracting numbers", null, tagsOfScenario, argumentsOfScenario, featureTags, pickleIndex);
            string[] tagsOfRule = ((string[])(null));
            global::Reqnroll.RuleInfo ruleInfo = null;
#line 39
    this.ScenarioInitialize(scenarioInfo, ruleInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                await testRunner.SkipScenarioAsync();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 40
        await testRunner.GivenAsync(string.Format("I have entered {0} into the calculator", first), ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 41
        await testRunner.AndAsync(string.Format("I want to subtract {0} from it", second), ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 42
        await testRunner.WhenAsync("I ask for the result", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 43
        await testRunner.ThenAsync(string.Format("the result should be {0}", total), ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [global::Xunit.SkippableTheoryAttribute(DisplayName="Using the Web Calculator")]
        [global::Xunit.TraitAttribute("FeatureTitle", "Simple Calculator")]
        [global::Xunit.TraitAttribute("Description", "Using the Web Calculator")]
        [global::Xunit.TraitAttribute("Category", "ui")]
        [global::Xunit.InlineDataAttribute("12", "5", "Add", "17", "7", new string[0])]
        [global::Xunit.InlineDataAttribute("20", "5", "Add", "25", "8", new string[0])]
        [global::Xunit.InlineDataAttribute("20", "5", "Subtract", "15", "9", new string[0])]
        [global::Xunit.InlineDataAttribute("20", "5", "Multiply", "100", "10", new string[0])]
        [global::Xunit.InlineDataAttribute("20", "5", "Divide", "4", "11", new string[0])]
        public async global::System.Threading.Tasks.Task UsingTheWebCalculator(string first, string second, string operation, string total, string @__pickleIndex, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "ui"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            global::System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new global::System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("first", first);
            argumentsOfScenario.Add("second", second);
            argumentsOfScenario.Add("operation", operation);
            argumentsOfScenario.Add("total", total);
            string pickleIndex = @__pickleIndex;
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Using the Web Calculator", null, tagsOfScenario, argumentsOfScenario, featureTags, pickleIndex);
            string[] tagsOfRule = ((string[])(null));
            global::Reqnroll.RuleInfo ruleInfo = null;
#line 51
    this.ScenarioInitialize(scenarioInfo, ruleInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                await testRunner.SkipScenarioAsync();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 52
        await testRunner.GivenAsync("I have opened the web calculator", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 53
        await testRunner.WhenAsync(string.Format("I enter {0} as the first number", first), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 54
        await testRunner.AndAsync(string.Format("I enter {0} as the second number", second), ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 55
        await testRunner.WhenAsync(string.Format("I click the \'{0}\' button", operation), ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 56
        await testRunner.ThenAsync("I can click the equals button", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 57
        await testRunner.AndAsync(string.Format("the result should be {0} on the screen", total), ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Reqnroll", "3.0.0.0")]
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : object, global::Xunit.IAsyncLifetime
        {
            
            async global::System.Threading.Tasks.Task global::Xunit.IAsyncLifetime.InitializeAsync()
            {
                await SimpleCalculatorFeature.FeatureSetupAsync();
            }
            
            async global::System.Threading.Tasks.Task global::Xunit.IAsyncLifetime.DisposeAsync()
            {
                await SimpleCalculatorFeature.FeatureTearDownAsync();
            }
        }
    }
}
#pragma warning restore
#endregion
